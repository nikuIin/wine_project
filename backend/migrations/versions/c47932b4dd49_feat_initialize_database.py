"""feat: initialize database

Revision ID: c47932b4dd49
Revises: 
Create Date: 2025-07-17 08:39:05.645111

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c47932b4dd49'
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('aroma',
    sa.Column('aroma_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('aroma_id')
    )
    op.create_table('aroma_deleted',
    sa.Column('aroma_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('aroma_id')
    )
    op.create_table('aroma_translate_deleted',
    sa.Column('aroma_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('aroma_id', 'language_id')
    )
    op.create_table('aroma_wine_deleted',
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('aroma_id', sa.Integer(), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('product_id', 'aroma_id')
    )
    op.create_table('article_deleted',
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('views_count', sa.Integer(), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.CheckConstraint('views_count >= 0', name='article_views_count_check'),
    sa.PrimaryKeyConstraint('article_id')
    )
    op.create_table('article_translate_deleted',
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('image_src', sa.String(length=255), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=True),
    sa.Column('tsv_content', postgresql.TSVECTOR(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.CheckConstraint('length(title) > 0', name='article_title_check'),
    sa.PrimaryKeyConstraint('article_id', 'language_id')
    )
    op.create_table('blog_category',
    sa.Column('blog_category_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('image_src', sa.String(length=255), nullable=True),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.CheckConstraint('length(slug) > 0', name='blog_category_slug_check'),
    sa.ForeignKeyConstraint(['parent_id'], ['blog_category.blog_category_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('blog_category_id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('country_deleted',
    sa.Column('country_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('flag_id', sa.Integer(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('country_id')
    )
    op.create_table('country_translate_deleted',
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('country_id', 'language_id')
    )
    op.create_table('flag',
    sa.Column('flag_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('flag_url', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('flag_id')
    )
    op.create_table('grape_deleted',
    sa.Column('grape_id', sa.UUID(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('grape_id')
    )
    op.create_table('grape_translate_deleted',
    sa.Column('grape_id', sa.UUID(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('grape_id', 'language_id')
    )
    op.create_table('md_user_deleted',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('middle_name', sa.String(length=255), nullable=False),
    sa.Column('profile_picture_link', sa.VARCHAR(length=255), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('permission',
    sa.Column('permission_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.CheckConstraint('length(name) > 0', name='permission_name_check'),
    sa.PrimaryKeyConstraint('permission_id')
    )
    op.create_table('presentation_type',
    sa.Column('presentation_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('presentation_type_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('product_deleted',
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('price', postgresql.MONEY(), nullable=False),
    sa.Column('discount', sa.NUMERIC(precision=3, scale=2), nullable=False),
    sa.Column('main_image_link', sa.String(length=255), nullable=True),
    sa.Column('video_link', sa.String(length=255), nullable=True),
    sa.Column('presentation_type_id', sa.Integer(), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('product_id')
    )
    op.create_table('product_translate_deleted',
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('product_id', 'language_id')
    )
    op.create_table('region_deleted',
    sa.Column('region_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('region_id')
    )
    op.create_table('region_translate_deleted',
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('region_id', 'language_id')
    )
    op.create_table('role',
    sa.Column('role_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.CheckConstraint('length(name) > 0', name='role_name_check'),
    sa.PrimaryKeyConstraint('role_id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('social_network',
    sa.Column('social_network_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('link', sa.String(length=255), nullable=False),
    sa.Column('image_src', sa.String(length=255), nullable=False),
    sa.CheckConstraint('length(image_src) > 0', name='social_network_image_src_check'),
    sa.CheckConstraint('length(link) > 0', name='social_network_link_check'),
    sa.CheckConstraint('length(name) > 0', name='social_network_name_check'),
    sa.PrimaryKeyConstraint('social_network_id'),
    sa.UniqueConstraint('link')
    )
    op.create_table('sort_deleted',
    sa.Column('grape_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('percentage_content', sa.NUMERIC(precision=5, scale=2), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('grape_id', 'product_id')
    )
    op.create_table('status',
    sa.Column('status_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('status_id')
    )
    op.create_table('tag',
    sa.Column('tag_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('tag_id')
    )
    op.create_table('user_deleted',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('login', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_registered', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('wine_category',
    sa.Column('wine_category_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('wine_category_id')
    )
    op.create_table('wine_category_deleted',
    sa.Column('wine_category_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('wine_category_id')
    )
    op.create_table('wine_category_translate_deleted',
    sa.Column('wine_category_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('wine_category_id', 'language_id')
    )
    op.create_table('wine_deleted',
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('volume', sa.NUMERIC(precision=4, scale=2), nullable=False),
    sa.Column('wine_strength', sa.NUMERIC(precision=5, scale=2), nullable=True),
    sa.Column('harvest_year', sa.DATE(), nullable=False),
    sa.Column('wine_type_id', sa.Integer(), nullable=False),
    sa.Column('wine_category_id', sa.Integer(), nullable=False),
    sa.Column('min_serving_temperature', sa.SMALLINT(), nullable=True),
    sa.Column('max_serving_temperature', sa.SMALLINT(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.PrimaryKeyConstraint('product_id')
    )
    op.create_table('wine_translate_deleted',
    sa.Column('wine_id', sa.UUID(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('production_method_description', sa.TEXT(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('wine_id', 'language_id')
    )
    op.create_table('wine_type',
    sa.Column('wine_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('wine_type_id')
    )
    op.create_table('wine_type_deleted',
    sa.Column('wine_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('wine_type_id')
    )
    op.create_table('wine_type_translate_deleted',
    sa.Column('wine_type_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('wine_type_id', 'language_id')
    )
    op.create_table('country',
    sa.Column('country_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('flag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['flag_id'], ['flag.flag_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('country_id')
    )
    op.create_table('language',
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('flag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['flag_id'], ['flag.flag_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('language_id')
    )
    op.create_table('product',
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('price', postgresql.MONEY(), nullable=False),
    sa.Column('discount', sa.NUMERIC(precision=3, scale=2), nullable=False),
    sa.Column('main_image_link', sa.String(length=255), nullable=True),
    sa.Column('video_link', sa.String(length=255), nullable=True),
    sa.Column('presentation_type_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('discount >= 0', name='check_discount_positive'),
    sa.CheckConstraint('price::numeric >= 0', name='check_price_positive'),
    sa.ForeignKeyConstraint(['presentation_type_id'], ['presentation_type.presentation_type_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('product_id')
    )
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permission.permission_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('login', sa.String(length=255), nullable=False),
    sa.Column('email', sa.VARCHAR(length=320), nullable=True),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('is_registered', sa.Boolean(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.CheckConstraint('length(email) >= 3', name='user_email_check'),
    sa.CheckConstraint('length(login) > 0', name='user_login_check'),
    sa.CheckConstraint('length(password) > 0', name='user_password_check'),
    sa.ForeignKeyConstraint(['role_id'], ['role.role_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('login')
    )
    op.create_table('aroma_translate',
    sa.Column('aroma_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['aroma_id'], ['aroma.aroma_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('aroma_id', 'language_id')
    )
    op.create_table('article',
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('views_count', sa.Integer(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.CheckConstraint('views_count >= 0', name='article_views_count_check'),
    sa.ForeignKeyConstraint(['author_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['category_id'], ['blog_category.blog_category_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['status_id'], ['status.status_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('article_id'),
    sa.UniqueConstraint('slug')
    )
    op.create_table('author',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('work_place', sa.String(length=255), nullable=False),
    sa.Column('post', sa.String(length=255), nullable=False),
    sa.Column('awards', sa.TEXT(), nullable=True),
    sa.Column('biography', sa.TEXT(), nullable=True),
    sa.Column('experience', sa.TEXT(), nullable=True),
    sa.Column('education', sa.TEXT(), nullable=True),
    sa.CheckConstraint('length(post) > 0', name='author_post_check'),
    sa.CheckConstraint('length(work_place) > 0', name='author_work_place_check'),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'language_id')
    )
    op.create_table('blog_category_translate',
    sa.Column('blog_category_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=False),
    sa.CheckConstraint('length(description) > 0', name='blog_category_description_check'),
    sa.CheckConstraint('length(name) > 0', name='blog_category_name_check'),
    sa.ForeignKeyConstraint(['blog_category_id'], ['blog_category.blog_category_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('blog_category_id', 'language_id')
    )
    op.create_table('country_translate',
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['country.country_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('country_id', 'language_id'),
    sa.UniqueConstraint('language_id', 'name')
    )
    op.create_table('md_user',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('middle_name', sa.String(length=255), nullable=True),
    sa.Column('profile_picture_link', sa.VARCHAR(length=255), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.CheckConstraint('length(first_name) > 0', name='md_user_first_name_check'),
    sa.CheckConstraint('length(last_name) > 0', name='md_user_last_name_check'),
    sa.CheckConstraint('length(middle_name) > 0', name='md_user_middle_name_check'),
    sa.CheckConstraint('length(profile_picture_link) > 0', name='md_user_profile_picture_link_check'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('product_translate',
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['product.product_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('product_id', 'language_id')
    )
    op.create_table('refresh_token',
    sa.Column('refresh_token_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('expire_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('refresh_token_id')
    )
    op.create_table('region',
    sa.Column('region_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('country_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['country.country_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('region_id')
    )
    op.create_table('status_translate',
    sa.Column('status_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.CheckConstraint('length(name) > 0', name='check_name_len'),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['status_id'], ['status.status_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('status_id')
    )
    op.create_table('tag_translate',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.CheckConstraint('length(name) > 0', name='tag_name_check'),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.tag_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tag_id', 'language_id'),
    sa.UniqueConstraint('name', 'language_id', name='tag_name_language_unique')
    )
    op.create_table('user_social_network',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('social_network_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['social_network_id'], ['social_network.social_network_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'social_network_id')
    )
    op.create_table('wine',
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('volume', sa.NUMERIC(precision=4, scale=2), nullable=False),
    sa.Column('wine_strength', sa.NUMERIC(precision=5, scale=2), nullable=True),
    sa.Column('harvest_year', sa.DATE(), nullable=False),
    sa.Column('wine_type_id', sa.Integer(), nullable=False),
    sa.Column('wine_category_id', sa.Integer(), nullable=False),
    sa.Column('min_serving_temperature', sa.SMALLINT(), nullable=True),
    sa.Column('max_serving_temperature', sa.SMALLINT(), nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.CheckConstraint("harvest_year >= '1900-01-01' AND harvest_year <= CURRENT_DATE", name='check_harvest_year'),
    sa.CheckConstraint('volume > 0', name='check_volume_positive'),
    sa.CheckConstraint('wine_strength >= 0', name='check_wine_strength_non_negative'),
    sa.ForeignKeyConstraint(['product_id'], ['product.product_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wine_category_id'], ['wine_category.wine_category_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wine_type_id'], ['wine_type.wine_type_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('product_id')
    )
    op.create_table('wine_category_translate',
    sa.Column('wine_category_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wine_category_id'], ['wine_category.wine_category_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('wine_category_id', 'language_id')
    )
    op.create_table('wine_type_translate',
    sa.Column('wine_type_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wine_type_id'], ['wine_type.wine_type_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('wine_type_id', 'language_id')
    )
    op.create_table('aroma_wine',
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('aroma_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['aroma_id'], ['aroma.aroma_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['wine.product_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('product_id', 'aroma_id')
    )
    op.create_table('article_translate',
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=True),
    sa.Column('image_src', sa.String(length=255), nullable=True),
    sa.Column('tsv_content', postgresql.TSVECTOR(), nullable=True),
    sa.CheckConstraint('length(content) >= 0', name='article_content_check'),
    sa.CheckConstraint('length(title) > 0', name='article_title_check'),
    sa.ForeignKeyConstraint(['article_id'], ['article.article_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('article_id', 'language_id'),
    sa.UniqueConstraint('title', 'language_id', name='article_title_language_unique')
    )
    op.create_table('black_refresh_token_list',
    sa.Column('refresh_token_id', sa.UUID(), nullable=False),
    sa.Column('ban_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['refresh_token_id'], ['refresh_token.refresh_token_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('refresh_token_id')
    )
    op.create_table('city',
    sa.Column('city_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['region_id'], ['region.region_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('city_id')
    )
    op.create_table('grape',
    sa.Column('grape_id', sa.UUID(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['region_id'], ['region.region_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('grape_id')
    )
    op.create_table('region_translate',
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['region_id'], ['region.region_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('region_id', 'language_id'),
    sa.UniqueConstraint('language_id', 'name')
    )
    op.create_table('tag_article',
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('article_id', sa.UUID(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['article.article_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.tag_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tag_id', 'article_id')
    )
    op.create_table('wine_translate',
    sa.Column('wine_id', sa.UUID(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('production_method_description', sa.TEXT(), nullable=True),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['wine_id'], ['wine.product_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('wine_id', 'language_id')
    )
    op.create_table('city_translate',
    sa.Column('city_id', sa.Integer(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.CheckConstraint('length(name) > 0', name='city_name_check'),
    sa.ForeignKeyConstraint(['city_id'], ['city.city_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('city_id', 'language_id')
    )
    op.create_table('grape_translate',
    sa.Column('grape_id', sa.UUID(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['grape_id'], ['grape.grape_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('grape_id', 'language_id')
    )
    op.create_table('sort',
    sa.Column('grape_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('percentage_content', sa.NUMERIC(precision=5, scale=2), nullable=False),
    sa.CheckConstraint('percentage_content > 0', name='check_percentage_content_positive'),
    sa.ForeignKeyConstraint(['grape_id'], ['grape.grape_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['wine.product_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('grape_id', 'product_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sort')
    op.drop_table('grape_translate')
    op.drop_table('city_translate')
    op.drop_table('wine_translate')
    op.drop_table('tag_article')
    op.drop_table('region_translate')
    op.drop_table('grape')
    op.drop_table('city')
    op.drop_table('black_refresh_token_list')
    op.drop_table('article_translate')
    op.drop_table('aroma_wine')
    op.drop_table('wine_type_translate')
    op.drop_table('wine_category_translate')
    op.drop_table('wine')
    op.drop_table('user_social_network')
    op.drop_table('tag_translate')
    op.drop_table('status_translate')
    op.drop_table('region')
    op.drop_table('refresh_token')
    op.drop_table('product_translate')
    op.drop_table('md_user')
    op.drop_table('country_translate')
    op.drop_table('blog_category_translate')
    op.drop_table('author')
    op.drop_table('article')
    op.drop_table('aroma_translate')
    op.drop_table('user')
    op.drop_table('role_permission')
    op.drop_table('product')
    op.drop_table('language')
    op.drop_table('country')
    op.drop_table('wine_type_translate_deleted')
    op.drop_table('wine_type_deleted')
    op.drop_table('wine_type')
    op.drop_table('wine_translate_deleted')
    op.drop_table('wine_deleted')
    op.drop_table('wine_category_translate_deleted')
    op.drop_table('wine_category_deleted')
    op.drop_table('wine_category')
    op.drop_table('user_deleted')
    op.drop_table('tag')
    op.drop_table('status')
    op.drop_table('sort_deleted')
    op.drop_table('social_network')
    op.drop_table('role')
    op.drop_table('region_translate_deleted')
    op.drop_table('region_deleted')
    op.drop_table('product_translate_deleted')
    op.drop_table('product_deleted')
    op.drop_table('presentation_type')
    op.drop_table('permission')
    op.drop_table('md_user_deleted')
    op.drop_table('grape_translate_deleted')
    op.drop_table('grape_deleted')
    op.drop_table('flag')
    op.drop_table('country_translate_deleted')
    op.drop_table('country_deleted')
    op.drop_table('blog_category')
    op.drop_table('article_translate_deleted')
    op.drop_table('article_deleted')
    op.drop_table('aroma_wine_deleted')
    op.drop_table('aroma_translate_deleted')
    op.drop_table('aroma_deleted')
    op.drop_table('aroma')
    # ### end Alembic commands ###
