"""feat: initialize tables for deleted data

Revision ID: 8b840e7f6b66
Revises: cf70591efe77
Create Date: 2025-07-07 16:02:57.135674

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "8b840e7f6b66"
down_revision: str | Sequence[str] | None = "cf70591efe77"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "aroma_deleted",
        sa.Column(
            "aroma_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("aroma_id"),
    )
    op.create_table(
        "aroma_translate_deleted",
        sa.Column("aroma_id", sa.Integer(), nullable=False),
        sa.Column("language_id", sa.VARCHAR(length=10), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("aroma_id", "language_id"),
    )
    op.create_table(
        "aroma_wine_deleted",
        sa.Column("product_id", sa.UUID(), nullable=False),
        sa.Column("aroma_id", sa.Integer(), nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("product_id", "aroma_id"),
    )
    op.create_table(
        "country_deleted",
        sa.Column(
            "country_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("flag_id", sa.Integer(), nullable=True),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("country_id"),
    )
    op.create_table(
        "country_translate_deleted",
        sa.Column("country_id", sa.Integer(), nullable=False),
        sa.Column("language_id", sa.VARCHAR(length=10), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("country_id", "language_id"),
    )
    op.create_table(
        "grape_deleted",
        sa.Column("grape_id", sa.UUID(), nullable=False),
        sa.Column("region_id", sa.Integer(), nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("grape_id"),
    )
    op.create_table(
        "grape_translate_deleted",
        sa.Column("grape_id", sa.UUID(), nullable=False),
        sa.Column("language_id", sa.VARCHAR(length=10), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("grape_id", "language_id"),
    )
    op.create_table(
        "product_deleted",
        sa.Column("product_id", sa.UUID(), nullable=False),
        sa.Column("price", postgresql.MONEY(), nullable=False),
        sa.Column(
            "discount", sa.NUMERIC(precision=3, scale=2), nullable=False
        ),
        sa.Column("main_image_link", sa.String(length=255), nullable=True),
        sa.Column("video_link", sa.String(length=255), nullable=True),
        sa.Column("presentation_type_id", sa.Integer(), nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("product_id"),
    )
    op.create_table(
        "product_translate_deleted",
        sa.Column("product_id", sa.UUID(), nullable=False),
        sa.Column("language_id", sa.VARCHAR(length=10), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("product_id", "language_id"),
    )
    op.create_table(
        "region_deleted",
        sa.Column(
            "region_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column("country_id", sa.Integer(), nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("region_id"),
    )
    op.create_table(
        "region_translate_deleted",
        sa.Column("region_id", sa.Integer(), nullable=False),
        sa.Column("language_id", sa.VARCHAR(length=10), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("region_id", "language_id"),
    )
    op.create_table(
        "sort_deleted",
        sa.Column("grape_id", sa.UUID(), nullable=False),
        sa.Column("product_id", sa.UUID(), nullable=False),
        sa.Column(
            "percentage_content",
            sa.NUMERIC(precision=5, scale=2),
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("grape_id", "product_id"),
    )
    op.create_table(
        "wine_category_deleted",
        sa.Column(
            "wine_category_id",
            sa.Integer(),
            autoincrement=True,
            nullable=False,
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("wine_category_id"),
    )
    op.create_table(
        "wine_category_translate_deleted",
        sa.Column("wine_category_id", sa.Integer(), nullable=False),
        sa.Column("language_id", sa.VARCHAR(length=10), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("wine_category_id", "language_id"),
    )
    op.create_table(
        "wine_deleted",
        sa.Column("product_id", sa.UUID(), nullable=False),
        sa.Column("volume", sa.NUMERIC(precision=4, scale=2), nullable=False),
        sa.Column(
            "wine_strength", sa.NUMERIC(precision=5, scale=2), nullable=True
        ),
        sa.Column("harvest_year", sa.DATE(), nullable=False),
        sa.Column("wine_type_id", sa.Integer(), nullable=False),
        sa.Column("wine_category_id", sa.Integer(), nullable=False),
        sa.Column("min_serving_temperature", sa.SMALLINT(), nullable=True),
        sa.Column("max_serving_temperature", sa.SMALLINT(), nullable=True),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("CURRENT_TIMESTAMP"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("product_id"),
    )
    op.create_table(
        "wine_translate_deleted",
        sa.Column("wine_id", sa.UUID(), nullable=False),
        sa.Column("language_id", sa.VARCHAR(length=10), nullable=False),
        sa.Column("production_method_description", sa.TEXT(), nullable=True),
        sa.Column("description", sa.TEXT(), nullable=True),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("wine_id", "language_id"),
    )
    op.create_table(
        "wine_type_deleted",
        sa.Column(
            "wine_type_id", sa.Integer(), autoincrement=True, nullable=False
        ),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("wine_type_id"),
    )
    op.create_table(
        "wine_type_translate_deleted",
        sa.Column("wine_type_id", sa.Integer(), nullable=False),
        sa.Column("language_id", sa.VARCHAR(length=10), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "deleted_at", postgresql.TIMESTAMP(timezone=True), nullable=False
        ),
        sa.PrimaryKeyConstraint("wine_type_id", "language_id"),
    )
    op.alter_column(
        "grape_translate",
        "language_id",
        existing_type=sa.VARCHAR(length=15),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "grape_translate",
        "language_id",
        existing_type=sa.VARCHAR(length=10),
        type_=sa.VARCHAR(length=15),
        existing_nullable=False,
    )
    op.drop_table("wine_type_translate_deleted")
    op.drop_table("wine_type_deleted")
    op.drop_table("wine_translate_deleted")
    op.drop_table("wine_deleted")
    op.drop_table("wine_category_translate_deleted")
    op.drop_table("wine_category_deleted")
    op.drop_table("sort_deleted")
    op.drop_table("region_translate_deleted")
    op.drop_table("region_deleted")
    op.drop_table("product_translate_deleted")
    op.drop_table("product_deleted")
    op.drop_table("grape_translate_deleted")
    op.drop_table("grape_deleted")
    op.drop_table("country_translate_deleted")
    op.drop_table("country_deleted")
    op.drop_table("aroma_wine_deleted")
    op.drop_table("aroma_translate_deleted")
    op.drop_table("aroma_deleted")
    # ### end Alembic commands ###
