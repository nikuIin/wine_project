"""feat: add trigger for saving version of deal

Revision ID: 40dd694d3fc1
Revises: a8029ca82286
Create Date: 2025-08-01 17:54:41.370868

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "40dd694d3fc1"
down_revision: str | Sequence[str] | None = "a8029ca82286"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
    op.execute("""
    create or replace function save_deal_state()
    returns trigger as $$
    begin
        insert into deal_history
        (
            deal_id, sale_stage_id,
            probability, lost_reason_id,
            manager_id, lost_reason_additional_text,
            changed_at
        )
        values
        (
            old.deal_id, old.sale_stage_id,
            old.probability, old.lost_reason_id,
            old.manager_id, old.lost_reason_additional_text,
            current_timestamp
        );
        if tg_op = 'UPDATE' then
            return new;
        elsif tg_op = 'DELETE' then
            return old;
        end if;
    end;
    $$ language plpgsql;
    """)
    op.execute(
        """
        create trigger trigger_save_deal_state_version
        before update or delete on deal
        for each row execute function save_deal_state();
        """
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
    op.execute("drop trigger trigger_save_deal_state_version on deal")
    op.execute("drop function save_deal_state")
