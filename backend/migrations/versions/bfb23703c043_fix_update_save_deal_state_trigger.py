"""fix: update save_deal_state trigger

Revision ID: bfb23703c043
Revises: 40dd694d3fc1
Create Date: 2025-08-05 14:51:16.349882

"""

from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "bfb23703c043"
down_revision: str | Sequence[str] | None = "40dd694d3fc1"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
    op.execute(
        """
        create or replace function save_deal_state()
        returns trigger as $$
        begin
            if tg_op = 'UPDATE' then
                if (old.sale_stage_id is distinct from new.sale_stage_id) or
                (old.probability is distinct from new.probability) or
                (old.lost_reason_id is distinct from new.lost_reason_id) or
                (old.lost_reason_additional_text is distinct from new.lost_reason_additional_text) or
                (old.manager_id is distinct from new.manager_id)
                then
                    insert into deal_history
                    (
                        deal_id, sale_stage_id,
                        probability, lost_reason_id,
                        manager_id, lost_reason_additional_text,
                        changed_at
                    )
                    values
                    (
                        old.deal_id, old.sale_stage_id,
                        old.probability, old.lost_reason_id,
                        old.manager_id, old.lost_reason_additional_text,
                        current_timestamp
                    );
                end if;
                return new;

            elsif tg_op = 'DELETE' then
                insert into deal_history
                (
                    deal_id, sale_stage_id,
                    probability, lost_reason_id,
                    manager_id, lost_reason_additional_text,
                    changed_at
                )
                values
                (
                    old.deal_id, old.sale_stage_id,
                    old.probability, old.lost_reason_id,
                    old.manager_id, old.lost_reason_additional_text,
                    current_timestamp
                );
                return old;
            end if;
            return new;
        end;
        $$ language plpgsql;
        """
    )


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
    op.execute(
        """
        create or replace function save_deal_state()
        returns trigger as $$
        begin
            insert into deal_history
            (
                deal_id, sale_stage_id,
                probability, lost_reason_id,
                manager_id, lost_reason_additional_text,
                changed_at
            )
            values
            (
                old.deal_id, old.sale_stage_id,
                old.probability, old.lost_reason_id,
                old.manager_id, old.lost_reason_additional_text,
                current_timestamp
            );
            if tg_op = 'UPDATE' then
                return new;
            elsif tg_op = 'DELETE' then
                return old;
            end if;
        end;
        $$ language plpgsql;
        """
    )
