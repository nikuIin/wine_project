"""fix: rename author_translate to author

Revision ID: 7ef0f00a3eaf
Revises: 2b01a985180a
Create Date: 2025-07-16 19:09:49.785318

"""
from collections.abc import Sequence
from typing import Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7ef0f00a3eaf'
down_revision: str | Sequence[str] | None = '2b01a985180a'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('author',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), nullable=False),
    sa.Column('work_place', sa.String(length=255), nullable=False),
    sa.Column('post', sa.String(length=255), nullable=False),
    sa.Column('awards', sa.TEXT(), nullable=True),
    sa.Column('biography', sa.TEXT(), nullable=True),
    sa.Column('experience', sa.TEXT(), nullable=True),
    sa.Column('education', sa.TEXT(), nullable=True),
    sa.CheckConstraint('length(post) > 0', name='author_post_check'),
    sa.CheckConstraint('length(work_place) > 0', name='author_work_place_check'),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'language_id')
    )
    op.drop_table('author_translate')
    op.add_column('article', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False))
    op.add_column('article', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=False))
    op.alter_column('article', 'views_count',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False)
    op.drop_constraint(op.f('article_author_id_fkey'), 'article', type_='foreignkey')
    op.create_foreign_key(None, 'article', 'user', ['author_id'], ['user_id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'article_translate', 'article', ['article_id'], ['article_id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'article_translate', type_='foreignkey')
    op.drop_constraint(None, 'article', type_='foreignkey')
    op.create_foreign_key(op.f('article_author_id_fkey'), 'article', 'user', ['author_id'], ['user_id'])
    op.alter_column('article', 'views_count',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               existing_nullable=False)
    op.drop_column('article', 'updated_at')
    op.drop_column('article', 'created_at')
    op.create_table('author_translate',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('language_id', sa.VARCHAR(length=10), autoincrement=False, nullable=False),
    sa.Column('work_place', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('post', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('awards', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('biography', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('experience', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('education', sa.TEXT(), autoincrement=False, nullable=True),
    sa.CheckConstraint('length(post::text) > 0', name=op.f('author_post_check')),
    sa.CheckConstraint('length(work_place::text) > 0', name=op.f('author_work_place_check')),
    sa.ForeignKeyConstraint(['language_id'], ['language.language_id'], name=op.f('author_translate_language_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], name=op.f('author_translate_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'language_id', name=op.f('author_translate_pkey'))
    )
    op.drop_table('author')
    # ### end Alembic commands ###
