"""fix: change grape_id type from INT to UUID

Revision ID: cf70591efe77
Revises: 281e949f22cb
Create Date: 2025-07-05 13:08:11.197440

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "cf70591efe77"
down_revision: str | Sequence[str] | None = "281e949f22cb"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    op.execute("drop table grape cascade;")
    op.execute("drop table grape_translate cascade;")
    op.execute("drop table sort cascade;")

    op.execute("""
        CREATE TABLE grape (
            grape_id UUID PRIMARY KEY,
            region_id INTEGER NOT NULL REFERENCES region(region_id),
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        """)
    op.execute(
        """
        create table grape_translate (
            grape_id UUID not null references grape(grape_id),
            language_id varchar(10) not null references language(language_id),
            name varchar(255) not null unique,
            primary key(grape_id, language_id)
        );
        """
    )
    op.execute(
        """
        CREATE TABLE sort (
            grape_id UUID NOT NULL REFERENCES grape(grape_id),
            product_id UUID NOT NULL REFERENCES wine(product_id),
            percentage_content NUMERIC(5, 2) NOT NULL,
            PRIMARY KEY (grape_id, product_id),
            CONSTRAINT check_percentage_content_positive CHECK (percentage_content > 0)
        );
        """
    )
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "grape",
        "grape_id",
        existing_type=sa.INTEGER(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "grape_translate",
        "grape_id",
        existing_type=sa.INTEGER(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    op.alter_column(
        "sort",
        "grape_id",
        existing_type=sa.INTEGER(),
        type_=sa.UUID(),
        existing_nullable=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    op.execute("drop table grape cascade;")
    op.execute("drop table grape_translate cascade;")
    op.execute("drop table sort cascade;")

    op.execute("""
        CREATE TABLE grape (
            grape_id INT PRIMARY KEY generated always as identity primary key,
            region_id INTEGER NOT NULL REFERENCES region(region_id),
            created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        );
        """)
    op.execute(
        """
        create table grape_translate (
            grape_id INT not null references grape(grape_id),
            language_id varchar(10) not null references language(language_id),
            name varchar(255) not null unique,
            primary key(grape_id, language_id)
        );
        """
    )
    op.execute(
        """
        CREATE TABLE sort (
            grape_id INT NOT NULL REFERENCES grape(grape_id),
            product_id UUID NOT NULL REFERENCES wine(product_id),
            percentage_content NUMERIC(5, 2) NOT NULL,
            PRIMARY KEY (grape_id, product_id),
            CONSTRAINT check_percentage_content_positive CHECK (percentage_content > 0)
        );
        """
    )
    # ### commands auto generated by Alembic - please adjust! ###
    # ### end Alembic commands ###
